plugins {
    id 'java'
    id 'application'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    // JDA (Java Discord API)
    implementation 'net.dv8tion:JDA:5.3.0'

    // Google Sheets API
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.39.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20250211-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.33.1'
    implementation 'com.google.cloud:google-cloud-core:2.14.0'


    // JSON parsing
    implementation 'com.google.code.gson:gson:2.8.9'

    // Логирование
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    // Тестирование
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    mainClass = 'bot.Main'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Main-Class': 'ru.absolute.bot.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23) // или 17, если используете preview
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["--enable-preview", "--release", "23"]
}
